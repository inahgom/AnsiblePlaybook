---
- name: Setup VM and prepare as Docker host
  hosts: your_vm_host
  become: true
  vars:
    docker_apt_key: https://download.docker.com/linux/ubuntu/gpg
    docker_apt_repository: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install dependencies
      apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common

    - name: Add Docker APT key
      apt_key:
        url: "{{ docker_apt_key }}"

    - name: Add Docker APT repository
      apt_repository:
        repo: "{{ docker_apt_repository }}"
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present

    - name: Install Docker Compose
      pip:
        name: docker-compose
        state: present
        executable: pip3

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes




Make sure to replace your_vm_host with the actual hostname or IP address of your VM. The playbook performs the following tasks:

1- Updates the apt cache.
2- Installs necessary dependencies like apt-transport-https, ca-certificates, curl, and software-properties-common.
3- Adds the Docker APT key for secure package installation.
4- Adds the Docker APT repository to the system's software sources.
5- Installs Docker Community Edition (CE) using the apt module.
6- Installs Docker Compose using pip.
7- Starts and enables the Docker service.
